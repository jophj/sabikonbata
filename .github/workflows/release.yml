name: Release

permissions:
  contents: write

on:
  release:
    types: [created]

jobs:
  upload-assets:
    strategy:
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest

    runs-on: ${{ matrix.os }}
    steps:
      - name: Versions
        run: |
          rustc --version --verbose
          cargo --version --verbose

      - name: Install rust target
        run: rustup target add ${{ matrix.target }}

      - uses: actions/checkout@v4

      - name: Release build
        id: build_release
        run: cargo build --release --target ${{ matrix.target }}

      - name: Compress binary
        if: ${{ runner.os != 'Windows'  }}
        run: tar -czf ${{ matrix.target }}.tar.gz --directory=target/${{ matrix.target }}/release sabikonbata

      - name: Compress binary on Windows
        if: ${{ runner.os == 'Windows'  }}
        run: Compress-Archive target/${{ matrix.target }}/release/sabikonbata.exe -Destination ${{ matrix.target }}.zip

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{matrix.target}}${{ runner.os == 'Windows' && '.zip' || '.tar.gz' }}
          asset_name: ${{matrix.target}}${{ runner.os == 'Windows' && '.zip' || '.tar.gz' }}
          asset_content_type: application/gzip